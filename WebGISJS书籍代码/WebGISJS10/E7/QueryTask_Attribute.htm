<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>QueryTask属性查询</title>
    <link rel="stylesheet" href="http://js.arcgis.com/3.20/esri/css/esri.css" />
    <link rel="stylesheet" href="http://js.arcgis.com/3.20/dijit/themes/claro/claro.css" />
    <script type="text/javascript" src="http://js.arcgis.com/3.20/init.js"></script>
    <style type="text/css">
        .MapClass
        {
            width:100%;
            height:600px;
            border:1px solid #000;
        }
    </style>
    <script type="text/javascript">
        require(["esri/map",
            "esri/layers/ArcGISDynamicMapServiceLayer",
            "dojo/dom",
            "dojo/on",
            "esri/tasks/QueryTask",
            "esri/tasks/query",
            "esri/symbols/SimpleLineSymbol",
            "esri/symbols/SimpleFillSymbol",
            "esri/graphic",
            "dojo/domReady!"], funQueryTask);
        function funQueryTask(Map, ArcGISDynamicMapServiceLayer, dom, on, QueryTask, Query, SimpleLineSymbol, SimpleFillSymbol, Graphic)
        {
            //添加动态地图服务图层
            var map = new Map("mapDiv");
            var layer = new ArcGISDynamicMapServiceLayer("http://localhost/ArcGIS/rest/services/usaDynamic/MapServer");
            map.addLayer(layer)
            //显示所有图层
            layer.setVisibleLayers([0, 1, 2, 3]);
            //给属性查询按钮添加click事件
            on(dom.byId("Btn"), "click", funQuery);
            function funQuery(e)
            {
                //定义查询对象
                var queryTask = new QueryTask("http://localhost/ArcGIS/rest/services/usaDynamic/MapServer/2");
                //定义查询参数对象
                var query = new Query();
                //查询条件，类似于sql语句的where子句
                query.where = "STATE_ABBR = " + "'" + QueryTxt.value + "'";
                //返回的字段信息：*代表返回全部字段
                query.outFields = ["*"];
                //是否返回几何形状
                query.returnGeometry = true;
                //执行属性查询
                queryTask.execute(query, funShowQueryResult);
            }
            //属性查询完成之后，用funShowQueryResult函数来处理返回的结果
            function funShowQueryResult(queryResult)
            {
                //创建线符号
                var lineSymbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new dojo.Color([0, 0, 255]), 2);
                //创建面符号
                var fill = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, lineSymbol, new dojo.Color([0, 255, 0, 0.4]));
                //未返回查询结果时不添加结果表格
                if (queryResult.features.length == 0)
                {
                    dom.byId("divShowResult").innerHTML = "";
                    return;
                }
                var htmls = "";
                //返回查询结果时添加结果表格，并设置表格内容
                if (queryResult.features.length >= 1)
                {
                    htmls = htmls + "<table style=\"width: 100%\">";
                    htmls = htmls + "<tr><td>名称</td></tr>";
                    for (var i = 0; i < queryResult.features.length; i++)
                    {
                        //获得图形graphic
                        var graphic = queryResult.features[i];
                        //赋予相应的符号
                        graphic.setSymbol(fill);
                        //将graphic添加到地图中，从而实现高亮效果
                        map.graphics.add(graphic);
                        //获得属性表中STATE_NAME的值
                        var stName = graphic.attributes["STATE_NAME"];
                        //隔行填充背景色
                        if (i % 2 == 0)
                            htmls = htmls + "<tr>";
                        else
                            htmls = htmls + "<tr bgcolor=\"#F0F0F0\">";
                        //在表格中显示查询结果
                        htmls = htmls + "<td><a href=\"#\" \">" + stName + "</a></td>";
                        htmls = htmls + "</tr>";
                    }
                    htmls = htmls + "</table>";
                    //将属性绑定在divShowResult上面
                    dom.byId("divShowResult").innerHTML = htmls;
                }
            }
        }
    </script>
</head>
<body>
    <div id="mapDiv" class="MapClass"></div>
    <input id="QueryTxt" value="WA" />
    <input type="button" value="属性查询" id="Btn" />
    <div id="divShowResult"></div>
</body>
</html>